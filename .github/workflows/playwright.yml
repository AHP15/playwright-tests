name: Playwright Test

on:
  push:
    branches: [main, dev, stg, prod]
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [main, dev, stg, prod]

permissions:
  contents: write
  id-token: write
  pull-requests: write
  pages: write
  issues: write

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: wait for deployment to finish
        run: sleep 60

      - name: Set Pull Request Branch
        if: github.event_name == 'pull_request'
        run: echo "GITHUB_REF_NAME=${{ github.head_ref }}" >> $GITHUB_ENV

      - name: Set Push Branch
        if: github.event_name != 'pull_request'
        run: echo "GITHUB_REF_NAME=${{ github.ref_name }}" >> $GITHUB_ENV

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "lts/*"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Intsall Playwright Browsers
        run: npx playwright install --with-deps

      - name: Run Playwright tests
        continue-on-error: true
        env:
          BASE_URL: "https://ff-customer-portal-git-${{ env.GITHUB_REF_NAME }}-egaliti.vercel.app"
        run: npx playwright test

      - name: extract test results
        id: extract-test-results
        if: always()
        run: node .github/scripts/parse-test-results.mjs

      - name: Upload Playwright report artifact
        if: ${{ !cancelled() }}
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report
          retention-days: 1

      - name: Generate Folder
        id: generate-folder-name
        run: node .github/scripts/generate-folder-name.mjs

      - name: Deploy Test report to GH pages
        if: ${{ !cancelled() }}
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: playwright-report
          publish_branch: gh-pages
          destination_dir: ${{ steps.generate-folder-name.outputs.folder_name }}
          force_orphan: false
          keep_files: true
          commit_message: "Deploy Playwright test report"

      - name: Comment on PR
        if: ${{ github.event_name == 'pull_request' }}
        env:
          REPORT_FOLDER: ${{ steps.generate-folder-name.outputs.folder_name }}
          TOTAL: ${{ steps.extract-test-results.outputs.total }}
          PASSED: ${{ steps.extract-test-results.outputs.passed }}
          FAILED: ${{ steps.extract-test-results.outputs.failed }}
          FLAKY: ${{ steps.extract-test-results.outputs.flaky }}
          SKIPPED: ${{ steps.extract-test-results.outputs.skipped }}
        run: node .github/scripts/pr-comment.mjs

      - name: Update index.html
        if: ${{ !cancelled() }}
        env:
          REPORT_FOLDER: ${{ steps.generate-folder-name.outputs.folder_name }}
          TOTAL: ${{ steps.extract-test-results.outputs.total }}
          PASSED: ${{ steps.extract-test-results.outputs.passed }}
          FAILED: ${{ steps.extract-test-results.outputs.failed }}
          FLAKY: ${{ steps.extract-test-results.outputs.flaky }}
          SKIPPED: ${{ steps.extract-test-results.outputs.skipped }}
        run: node .github/scripts/update-index-html.mjs
      - name: Create Issue on failing tests
        if: ${{ github.event_name != 'pull_request' }}
        run: node .github/scripts/create-issue.mjs
        env:
          TOTAL: ${{ steps.extract-test-results.outputs.total }}
          PASSED: ${{ steps.extract-test-results.outputs.passed }}
          FAILED: ${{ steps.extract-test-results.outputs.failed }}
          FLAKY: ${{ steps.extract-test-results.outputs.flaky }}
          SKIPPED: ${{ steps.extract-test-results.outputs.skipped }}
          REPORT_FOLDER: ${{ steps.generate-folder-name.outputs.folder_name }}
