{
  "config": {
    "configFile": "/home/runner/work/playwright-tests/playwright-tests/playwright.config.ts",
    "rootDir": "/home/runner/work/playwright-tests/playwright-tests/tests",
    "forbidOnly": true,
    "fullyParallel": true,
    "globalSetup": null,
    "globalTeardown": null,
    "globalTimeout": 0,
    "grep": {},
    "grepInvert": null,
    "maxFailures": 0,
    "metadata": {
      "ci": {
        "commitHref": "https://github.com/AHP15/playwright-tests/commit/c0c99cffe430f1090e76c1e975a02c965ba1a18f",
        "commitHash": "c0c99cffe430f1090e76c1e975a02c965ba1a18f",
        "prHref": "https://github.com/AHP15/playwright-tests/pull/11",
        "prTitle": "Add Trace",
        "prBaseHash": "70166facd80ce5c3c2b573a6e7568913d48f2c13",
        "buildHref": "https://github.com/AHP15/playwright-tests/actions/runs/14903045081"
      },
      "gitCommit": {
        "shortHash": "c0c99cf",
        "hash": "c0c99cffe430f1090e76c1e975a02c965ba1a18f",
        "subject": "Merge dbe520a85c3399f8e77532b2a83b939e8a540ce5 into 70166facd80ce5c3c2b573a6e7568913d48f2c13",
        "body": "Merge dbe520a85c3399f8e77532b2a83b939e8a540ce5 into 70166facd80ce5c3c2b573a6e7568913d48f2c13\n",
        "author": {
          "name": "Abdessittir Harkati",
          "email": "harkati.web.dev@gmail.com",
          "time": 1746695858000
        },
        "committer": {
          "name": "GitHub",
          "email": "noreply@github.com",
          "time": 1746695858000
        },
        "branch": "HEAD"
      },
      "gitDiff": "diff --git a/.github/scripts/cleanup.mjs b/.github/scripts/cleanup.mjs\nnew file mode 100644\nindex 0000000..ee2c0a1\n--- /dev/null\n+++ b/.github/scripts/cleanup.mjs\n@@ -0,0 +1,105 @@\n+import { getOctokit, context } from '@actions/github';\n+import * as core from '@actions/core';\n+import process from 'process';\n+import { exec } from '@actions/exec';\n+import * as fs from 'fs';\n+import * as path from 'path';\n+import process from 'process';\n+\n+try {\n+  const token = process.env.GITHUB_TOKEN || core.getInput('github-token');\n+    if (!token) {\n+      throw new Error('No GitHub token provided.');\n+    }\n+\n+    const octokit = getOctokit(token);\n+    const { owner, repo } = context.repo;\n+\n+    await exec('git', ['config', '--global', 'user.name', 'github-actions']);\n+    await exec('git', ['config', '--global', 'user.email', 'github-actions@github.com']);\n+\n+    const tempDir = path.join(process.cwd(), 'gh-pages-temp');\n+    if (fs.existsSync(tempDir)) {\n+      fs.rmSync(tempDir, { recursive: true, force: true });\n+    }\n+    fs.mkdirSync(tempDir);\n+\n+    const repoURL = `https://x-access-token:${token}@github.com/${owner}/${repo}.git`;\n+    console.log('Checking out gh-pages branch...');\n+    await exec(\n+      'git',\n+      ['clone', repoURL, tempDir, '--branch', 'gh-pages']\n+    ).catch(async (error) => {\n+      console.log('gh-pages branch does not exist yet, creating it...');\n+      await exec.exec('git', ['init', tempDir]);\n+      process.chdir(tempDir);\n+      await exec.exec('git', ['checkout', '--orphan', 'gh-pages']);\n+      await exec.exec('git', ['remote', 'add', 'origin', repoURL]);\n+      process.chdir('..');\n+    });\n+\n+    process.chdir(tempDir);\n+\n+    // If the branch exists and has files, remove all files except .git\n+    const files = fs.readdirSync('.');\n+    for (const file of files) {\n+      if (file !== '.git') {\n+        const filePath = path.join('.', file);\n+        if (fs.lstatSync(filePath).isDirectory()) {\n+          fs.rmSync(filePath, { recursive: true, force: true });\n+        } else {\n+          fs.unlinkSync(filePath);\n+        }\n+      }\n+    }\n+    \n+    // Add a .nojekyll file to bypass Jekyll processing\n+    fs.writeFileSync('.nojekyll', '');\n+\n+    // Add, commit, and push changes\n+    console.log('Committing empty gh-pages branch...');\n+    await exec.exec('git', ['add', '-A']);\n+    await exec.exec('git', ['commit', '-m', 'Clear gh-pages branch', '--allow-empty']);\n+    \n+    console.log('Pushing changes...');\n+    await exec.exec('git', ['push', '-f', 'origin', 'gh-pages']);\n+    \n+    console.log('Successfully cleared gh-pages branch');\n+\n+    // update PR comments to indacate that the gh-pages branch has been cleared\n+    const { data: comments } = await octokit.rest.issues.listComments({\n+      owner,\n+      repo,\n+      issue_number: number,\n+    });\n+\n+    const commentTitle = '# Playwright Test Results'\n+    const existingComments = comments.filter(comment => \n+      comment.body.trim().startsWith(commentTitle.trim())\n+    );\n+\n+    // Update each existing comment to include 'DELETED'\n+    for (const comment of existingComments) {\n+      // Create the new comment body with DELETED marker\n+      const newBody = comment.body.replace(\n+        commentTitle,\n+        `# Playwright Test Results [DELETED]`\n+      );\n+    \n+      // Add a notice about reports being deleted\n+      const deletedNotice = `\\n\\n**NOTICE: All reports have been deleted from the gh-pages branch.**\\nDeleted on: ${new Date().toUTCString()}, to see the reports please re-run the test action.`;\n+    \n+      // Update the comment\n+      await octokit.rest.issues.updateComment({\n+        owner,\n+        repo,\n+        comment_id: comment.id,\n+        body: newBody + deletedNotice,\n+      });\n+    \n+      console.log(`Updated comment ${comment.id} to indicate deletion`);\n+    }\n+\n+} catch (error) {\n+  core.setFailed(`Action failed with error ${error}`);\n+}\n\\ No newline at end of file\ndiff --git a/.github/workflows/cleanup.yml b/.github/workflows/cleanup.yml\nnew file mode 100644\nindex 0000000..938395f\n--- /dev/null\n+++ b/.github/workflows/cleanup.yml\n@@ -0,0 +1,24 @@\n+name: Cleanup Tests Reports\n+\n+on:\n+  schedule:\n+    - cron: \"*/5 * * * *\" # Run every 5 minutes\n+\n+jobs:\n+  cleanup:\n+    runs-on: ubuntu-latest\n+    steps:\n+      - name: Checkout repository\n+        uses: actions/checkout@v2\n+\n+      - name: Set up Node.js\n+        uses: actions/setup-node@v4\n+        with:\n+          node-version: \"lts/*\"\n+          cache: \"npm\"\n+\n+      - name: Install dependencies\n+        run: npm ci\n+\n+      - name: Remove test reports\n+        run: node .github/workflows/cleanup.mjs\ndiff --git a/.github/workflows/playwright.yml b/.github/workflows/playwright.yml\nindex 63cc1ec..776925b 100644\n--- a/.github/workflows/playwright.yml\n+++ b/.github/workflows/playwright.yml\n@@ -19,7 +19,6 @@ jobs:\n     name: Run Tests\n     runs-on: ubuntu-latest\n     env:\n-      BASE_URL: https://ff-customer-portal-git-${{github.ref_name}}-egaliti.vercel.app\n       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n     steps:\n       - name: wait for deployment to finish\ndiff --git a/package-lock.json b/package-lock.json\nindex 2cfa604..cb9a12d 100644\n--- a/package-lock.json\n+++ b/package-lock.json\n@@ -9,6 +9,7 @@\n       \"version\": \"0.0.0\",\n       \"dependencies\": {\n         \"@actions/core\": \"^1.11.1\",\n+        \"@actions/exec\": \"^1.1.1\",\n         \"@actions/github\": \"^6.0.0\",\n         \"react\": \"^19.1.0\",\n         \"react-dom\": \"^19.1.0\"\ndiff --git a/package.json b/package.json\nindex a5fc5b4..a483b1d 100644\n--- a/package.json\n+++ b/package.json\n@@ -11,6 +11,7 @@\n   },\n   \"dependencies\": {\n     \"@actions/core\": \"^1.11.1\",\n+    \"@actions/exec\": \"^1.1.1\",\n     \"@actions/github\": \"^6.0.0\",\n     \"react\": \"^19.1.0\",\n     \"react-dom\": \"^19.1.0\"\ndiff --git a/playwright.config.ts b/playwright.config.ts\nindex bb04b99..4de6b09 100644\n--- a/playwright.config.ts\n+++ b/playwright.config.ts\n@@ -30,7 +30,7 @@ export default defineConfig({\n     screenshot: 'only-on-failure',\n \n     /* Collect trace when retrying the failed test. See https://playwright.dev/docs/trace-viewer */\n-    trace: 'on-first-retry',\n+    trace: process.env.CI ? 'on' : 'on-first-retry',\n   },\n \n   /* Configure projects for major browsers */",
      "actualWorkers": 1
    },
    "preserveOutput": "always",
    "reporter": [
      [
        "html",
        null
      ],
      [
        "json",
        {
          "outputFile": "playwright-report/results.json"
        }
      ]
    ],
    "reportSlowTests": {
      "max": 5,
      "threshold": 300000
    },
    "quiet": false,
    "projects": [
      {
        "outputDir": "/home/runner/work/playwright-tests/playwright-tests/test-results",
        "repeatEach": 1,
        "retries": 2,
        "metadata": {
          "ci": {
            "commitHref": "https://github.com/AHP15/playwright-tests/commit/c0c99cffe430f1090e76c1e975a02c965ba1a18f",
            "commitHash": "c0c99cffe430f1090e76c1e975a02c965ba1a18f",
            "prHref": "https://github.com/AHP15/playwright-tests/pull/11",
            "prTitle": "Add Trace",
            "prBaseHash": "70166facd80ce5c3c2b573a6e7568913d48f2c13",
            "buildHref": "https://github.com/AHP15/playwright-tests/actions/runs/14903045081"
          },
          "gitCommit": {
            "shortHash": "c0c99cf",
            "hash": "c0c99cffe430f1090e76c1e975a02c965ba1a18f",
            "subject": "Merge dbe520a85c3399f8e77532b2a83b939e8a540ce5 into 70166facd80ce5c3c2b573a6e7568913d48f2c13",
            "body": "Merge dbe520a85c3399f8e77532b2a83b939e8a540ce5 into 70166facd80ce5c3c2b573a6e7568913d48f2c13\n",
            "author": {
              "name": "Abdessittir Harkati",
              "email": "harkati.web.dev@gmail.com",
              "time": 1746695858000
            },
            "committer": {
              "name": "GitHub",
              "email": "noreply@github.com",
              "time": 1746695858000
            },
            "branch": "HEAD"
          },
          "gitDiff": "diff --git a/.github/scripts/cleanup.mjs b/.github/scripts/cleanup.mjs\nnew file mode 100644\nindex 0000000..ee2c0a1\n--- /dev/null\n+++ b/.github/scripts/cleanup.mjs\n@@ -0,0 +1,105 @@\n+import { getOctokit, context } from '@actions/github';\n+import * as core from '@actions/core';\n+import process from 'process';\n+import { exec } from '@actions/exec';\n+import * as fs from 'fs';\n+import * as path from 'path';\n+import process from 'process';\n+\n+try {\n+  const token = process.env.GITHUB_TOKEN || core.getInput('github-token');\n+    if (!token) {\n+      throw new Error('No GitHub token provided.');\n+    }\n+\n+    const octokit = getOctokit(token);\n+    const { owner, repo } = context.repo;\n+\n+    await exec('git', ['config', '--global', 'user.name', 'github-actions']);\n+    await exec('git', ['config', '--global', 'user.email', 'github-actions@github.com']);\n+\n+    const tempDir = path.join(process.cwd(), 'gh-pages-temp');\n+    if (fs.existsSync(tempDir)) {\n+      fs.rmSync(tempDir, { recursive: true, force: true });\n+    }\n+    fs.mkdirSync(tempDir);\n+\n+    const repoURL = `https://x-access-token:${token}@github.com/${owner}/${repo}.git`;\n+    console.log('Checking out gh-pages branch...');\n+    await exec(\n+      'git',\n+      ['clone', repoURL, tempDir, '--branch', 'gh-pages']\n+    ).catch(async (error) => {\n+      console.log('gh-pages branch does not exist yet, creating it...');\n+      await exec.exec('git', ['init', tempDir]);\n+      process.chdir(tempDir);\n+      await exec.exec('git', ['checkout', '--orphan', 'gh-pages']);\n+      await exec.exec('git', ['remote', 'add', 'origin', repoURL]);\n+      process.chdir('..');\n+    });\n+\n+    process.chdir(tempDir);\n+\n+    // If the branch exists and has files, remove all files except .git\n+    const files = fs.readdirSync('.');\n+    for (const file of files) {\n+      if (file !== '.git') {\n+        const filePath = path.join('.', file);\n+        if (fs.lstatSync(filePath).isDirectory()) {\n+          fs.rmSync(filePath, { recursive: true, force: true });\n+        } else {\n+          fs.unlinkSync(filePath);\n+        }\n+      }\n+    }\n+    \n+    // Add a .nojekyll file to bypass Jekyll processing\n+    fs.writeFileSync('.nojekyll', '');\n+\n+    // Add, commit, and push changes\n+    console.log('Committing empty gh-pages branch...');\n+    await exec.exec('git', ['add', '-A']);\n+    await exec.exec('git', ['commit', '-m', 'Clear gh-pages branch', '--allow-empty']);\n+    \n+    console.log('Pushing changes...');\n+    await exec.exec('git', ['push', '-f', 'origin', 'gh-pages']);\n+    \n+    console.log('Successfully cleared gh-pages branch');\n+\n+    // update PR comments to indacate that the gh-pages branch has been cleared\n+    const { data: comments } = await octokit.rest.issues.listComments({\n+      owner,\n+      repo,\n+      issue_number: number,\n+    });\n+\n+    const commentTitle = '# Playwright Test Results'\n+    const existingComments = comments.filter(comment => \n+      comment.body.trim().startsWith(commentTitle.trim())\n+    );\n+\n+    // Update each existing comment to include 'DELETED'\n+    for (const comment of existingComments) {\n+      // Create the new comment body with DELETED marker\n+      const newBody = comment.body.replace(\n+        commentTitle,\n+        `# Playwright Test Results [DELETED]`\n+      );\n+    \n+      // Add a notice about reports being deleted\n+      const deletedNotice = `\\n\\n**NOTICE: All reports have been deleted from the gh-pages branch.**\\nDeleted on: ${new Date().toUTCString()}, to see the reports please re-run the test action.`;\n+    \n+      // Update the comment\n+      await octokit.rest.issues.updateComment({\n+        owner,\n+        repo,\n+        comment_id: comment.id,\n+        body: newBody + deletedNotice,\n+      });\n+    \n+      console.log(`Updated comment ${comment.id} to indicate deletion`);\n+    }\n+\n+} catch (error) {\n+  core.setFailed(`Action failed with error ${error}`);\n+}\n\\ No newline at end of file\ndiff --git a/.github/workflows/cleanup.yml b/.github/workflows/cleanup.yml\nnew file mode 100644\nindex 0000000..938395f\n--- /dev/null\n+++ b/.github/workflows/cleanup.yml\n@@ -0,0 +1,24 @@\n+name: Cleanup Tests Reports\n+\n+on:\n+  schedule:\n+    - cron: \"*/5 * * * *\" # Run every 5 minutes\n+\n+jobs:\n+  cleanup:\n+    runs-on: ubuntu-latest\n+    steps:\n+      - name: Checkout repository\n+        uses: actions/checkout@v2\n+\n+      - name: Set up Node.js\n+        uses: actions/setup-node@v4\n+        with:\n+          node-version: \"lts/*\"\n+          cache: \"npm\"\n+\n+      - name: Install dependencies\n+        run: npm ci\n+\n+      - name: Remove test reports\n+        run: node .github/workflows/cleanup.mjs\ndiff --git a/.github/workflows/playwright.yml b/.github/workflows/playwright.yml\nindex 63cc1ec..776925b 100644\n--- a/.github/workflows/playwright.yml\n+++ b/.github/workflows/playwright.yml\n@@ -19,7 +19,6 @@ jobs:\n     name: Run Tests\n     runs-on: ubuntu-latest\n     env:\n-      BASE_URL: https://ff-customer-portal-git-${{github.ref_name}}-egaliti.vercel.app\n       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n     steps:\n       - name: wait for deployment to finish\ndiff --git a/package-lock.json b/package-lock.json\nindex 2cfa604..cb9a12d 100644\n--- a/package-lock.json\n+++ b/package-lock.json\n@@ -9,6 +9,7 @@\n       \"version\": \"0.0.0\",\n       \"dependencies\": {\n         \"@actions/core\": \"^1.11.1\",\n+        \"@actions/exec\": \"^1.1.1\",\n         \"@actions/github\": \"^6.0.0\",\n         \"react\": \"^19.1.0\",\n         \"react-dom\": \"^19.1.0\"\ndiff --git a/package.json b/package.json\nindex a5fc5b4..a483b1d 100644\n--- a/package.json\n+++ b/package.json\n@@ -11,6 +11,7 @@\n   },\n   \"dependencies\": {\n     \"@actions/core\": \"^1.11.1\",\n+    \"@actions/exec\": \"^1.1.1\",\n     \"@actions/github\": \"^6.0.0\",\n     \"react\": \"^19.1.0\",\n     \"react-dom\": \"^19.1.0\"\ndiff --git a/playwright.config.ts b/playwright.config.ts\nindex bb04b99..4de6b09 100644\n--- a/playwright.config.ts\n+++ b/playwright.config.ts\n@@ -30,7 +30,7 @@ export default defineConfig({\n     screenshot: 'only-on-failure',\n \n     /* Collect trace when retrying the failed test. See https://playwright.dev/docs/trace-viewer */\n-    trace: 'on-first-retry',\n+    trace: process.env.CI ? 'on' : 'on-first-retry',\n   },\n \n   /* Configure projects for major browsers */",
          "actualWorkers": 1
        },
        "id": "chromium",
        "name": "chromium",
        "testDir": "/home/runner/work/playwright-tests/playwright-tests/tests",
        "testIgnore": [],
        "testMatch": [
          "**/*.@(spec|test).?(c|m)[jt]s?(x)"
        ],
        "timeout": 30000
      }
    ],
    "shard": null,
    "updateSnapshots": "missing",
    "updateSourceMethod": "patch",
    "version": "1.52.0",
    "workers": 1,
    "webServer": null
  },
  "suites": [
    {
      "title": "app.spec.ts",
      "file": "app.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [
        {
          "title": "has title",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 0,
                  "parallelIndex": 0,
                  "status": "failed",
                  "duration": 5503,
                  "error": {
                    "message": "Error: \u001b[31mTimed out 5000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoHaveTitle\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nLocator: locator(':root')\nExpected pattern: \u001b[32m/Vite + React Hello/\u001b[39m\nReceived string:  \u001b[31m\"404: NOT_FOUND\"\u001b[39m\nCall log:\n\u001b[2m  - expect.toHaveTitle with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for locator(':root')\u001b[22m\n\u001b[2m    9 × locator resolved to <html lang=\"en\">…</html>\u001b[22m\n\u001b[2m      - unexpected value \"404: NOT_FOUND\"\u001b[22m\n",
                    "stack": "Error: \u001b[31mTimed out 5000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoHaveTitle\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nLocator: locator(':root')\nExpected pattern: \u001b[32m/Vite + React Hello/\u001b[39m\nReceived string:  \u001b[31m\"404: NOT_FOUND\"\u001b[39m\nCall log:\n\u001b[2m  - expect.toHaveTitle with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for locator(':root')\u001b[22m\n\u001b[2m    9 × locator resolved to <html lang=\"en\">…</html>\u001b[22m\n\u001b[2m      - unexpected value \"404: NOT_FOUND\"\u001b[22m\n\n    at /home/runner/work/playwright-tests/playwright-tests/tests/app.spec.ts:7:22",
                    "location": {
                      "file": "/home/runner/work/playwright-tests/playwright-tests/tests/app.spec.ts",
                      "column": 22,
                      "line": 7
                    },
                    "snippet": "\u001b[0m \u001b[90m  5 |\u001b[39m\n \u001b[90m  6 |\u001b[39m   \u001b[90m// Expect a title \"to contain\" a substring.\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m  7 |\u001b[39m   \u001b[36mawait\u001b[39m expect(page)\u001b[33m.\u001b[39mtoHaveTitle(\u001b[35m/Vite + React Hello/\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m  8 |\u001b[39m })\u001b[33m;\u001b[39m\n \u001b[90m  9 |\u001b[39m\n \u001b[90m 10 |\u001b[39m test(\u001b[32m'should fails'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\u001b[0m"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/home/runner/work/playwright-tests/playwright-tests/tests/app.spec.ts",
                        "column": 22,
                        "line": 7
                      },
                      "message": "Error: \u001b[31mTimed out 5000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoHaveTitle\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nLocator: locator(':root')\nExpected pattern: \u001b[32m/Vite + React Hello/\u001b[39m\nReceived string:  \u001b[31m\"404: NOT_FOUND\"\u001b[39m\nCall log:\n\u001b[2m  - expect.toHaveTitle with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for locator(':root')\u001b[22m\n\u001b[2m    9 × locator resolved to <html lang=\"en\">…</html>\u001b[22m\n\u001b[2m      - unexpected value \"404: NOT_FOUND\"\u001b[22m\n\n\n   5 |\n   6 |   // Expect a title \"to contain\" a substring.\n>  7 |   await expect(page).toHaveTitle(/Vite + React Hello/);\n     |                      ^\n   8 | });\n   9 |\n  10 | test('should fails', async ({ page }) => {\n    at /home/runner/work/playwright-tests/playwright-tests/tests/app.spec.ts:7:22"
                    }
                  ],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-05-08T09:21:08.882Z",
                  "annotations": [],
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/runner/work/playwright-tests/playwright-tests/test-results/app-has-title-chromium/test-failed-1.png"
                    },
                    {
                      "name": "_error-context-0",
                      "contentType": "text/markdown",
                      "path": "/home/runner/work/playwright-tests/playwright-tests/test-results/app-has-title-chromium/error-context.md"
                    },
                    {
                      "name": "trace",
                      "contentType": "application/zip",
                      "path": "/home/runner/work/playwright-tests/playwright-tests/test-results/app-has-title-chromium/trace.zip"
                    }
                  ],
                  "errorLocation": {
                    "file": "/home/runner/work/playwright-tests/playwright-tests/tests/app.spec.ts",
                    "column": 22,
                    "line": 7
                  }
                },
                {
                  "workerIndex": 1,
                  "parallelIndex": 0,
                  "status": "failed",
                  "duration": 5240,
                  "error": {
                    "message": "Error: \u001b[31mTimed out 5000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoHaveTitle\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nLocator: locator(':root')\nExpected pattern: \u001b[32m/Vite + React Hello/\u001b[39m\nReceived string:  \u001b[31m\"404: NOT_FOUND\"\u001b[39m\nCall log:\n\u001b[2m  - expect.toHaveTitle with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for locator(':root')\u001b[22m\n\u001b[2m    9 × locator resolved to <html lang=\"en\">…</html>\u001b[22m\n\u001b[2m      - unexpected value \"404: NOT_FOUND\"\u001b[22m\n",
                    "stack": "Error: \u001b[31mTimed out 5000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoHaveTitle\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nLocator: locator(':root')\nExpected pattern: \u001b[32m/Vite + React Hello/\u001b[39m\nReceived string:  \u001b[31m\"404: NOT_FOUND\"\u001b[39m\nCall log:\n\u001b[2m  - expect.toHaveTitle with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for locator(':root')\u001b[22m\n\u001b[2m    9 × locator resolved to <html lang=\"en\">…</html>\u001b[22m\n\u001b[2m      - unexpected value \"404: NOT_FOUND\"\u001b[22m\n\n    at /home/runner/work/playwright-tests/playwright-tests/tests/app.spec.ts:7:22",
                    "location": {
                      "file": "/home/runner/work/playwright-tests/playwright-tests/tests/app.spec.ts",
                      "column": 22,
                      "line": 7
                    },
                    "snippet": "\u001b[0m \u001b[90m  5 |\u001b[39m\n \u001b[90m  6 |\u001b[39m   \u001b[90m// Expect a title \"to contain\" a substring.\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m  7 |\u001b[39m   \u001b[36mawait\u001b[39m expect(page)\u001b[33m.\u001b[39mtoHaveTitle(\u001b[35m/Vite + React Hello/\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m  8 |\u001b[39m })\u001b[33m;\u001b[39m\n \u001b[90m  9 |\u001b[39m\n \u001b[90m 10 |\u001b[39m test(\u001b[32m'should fails'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\u001b[0m"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/home/runner/work/playwright-tests/playwright-tests/tests/app.spec.ts",
                        "column": 22,
                        "line": 7
                      },
                      "message": "Error: \u001b[31mTimed out 5000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoHaveTitle\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nLocator: locator(':root')\nExpected pattern: \u001b[32m/Vite + React Hello/\u001b[39m\nReceived string:  \u001b[31m\"404: NOT_FOUND\"\u001b[39m\nCall log:\n\u001b[2m  - expect.toHaveTitle with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for locator(':root')\u001b[22m\n\u001b[2m    9 × locator resolved to <html lang=\"en\">…</html>\u001b[22m\n\u001b[2m      - unexpected value \"404: NOT_FOUND\"\u001b[22m\n\n\n   5 |\n   6 |   // Expect a title \"to contain\" a substring.\n>  7 |   await expect(page).toHaveTitle(/Vite + React Hello/);\n     |                      ^\n   8 | });\n   9 |\n  10 | test('should fails', async ({ page }) => {\n    at /home/runner/work/playwright-tests/playwright-tests/tests/app.spec.ts:7:22"
                    }
                  ],
                  "stdout": [],
                  "stderr": [],
                  "retry": 1,
                  "startTime": "2025-05-08T09:21:18.671Z",
                  "annotations": [],
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/runner/work/playwright-tests/playwright-tests/test-results/app-has-title-chromium-retry1/test-failed-1.png"
                    },
                    {
                      "name": "_error-context-0",
                      "contentType": "text/markdown",
                      "path": "/home/runner/work/playwright-tests/playwright-tests/test-results/app-has-title-chromium-retry1/error-context.md"
                    },
                    {
                      "name": "trace",
                      "contentType": "application/zip",
                      "path": "/home/runner/work/playwright-tests/playwright-tests/test-results/app-has-title-chromium-retry1/trace.zip"
                    }
                  ],
                  "errorLocation": {
                    "file": "/home/runner/work/playwright-tests/playwright-tests/tests/app.spec.ts",
                    "column": 22,
                    "line": 7
                  }
                },
                {
                  "workerIndex": 2,
                  "parallelIndex": 0,
                  "status": "failed",
                  "duration": 5243,
                  "error": {
                    "message": "Error: \u001b[31mTimed out 5000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoHaveTitle\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nLocator: locator(':root')\nExpected pattern: \u001b[32m/Vite + React Hello/\u001b[39m\nReceived string:  \u001b[31m\"404: NOT_FOUND\"\u001b[39m\nCall log:\n\u001b[2m  - expect.toHaveTitle with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for locator(':root')\u001b[22m\n\u001b[2m    9 × locator resolved to <html lang=\"en\">…</html>\u001b[22m\n\u001b[2m      - unexpected value \"404: NOT_FOUND\"\u001b[22m\n",
                    "stack": "Error: \u001b[31mTimed out 5000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoHaveTitle\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nLocator: locator(':root')\nExpected pattern: \u001b[32m/Vite + React Hello/\u001b[39m\nReceived string:  \u001b[31m\"404: NOT_FOUND\"\u001b[39m\nCall log:\n\u001b[2m  - expect.toHaveTitle with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for locator(':root')\u001b[22m\n\u001b[2m    9 × locator resolved to <html lang=\"en\">…</html>\u001b[22m\n\u001b[2m      - unexpected value \"404: NOT_FOUND\"\u001b[22m\n\n    at /home/runner/work/playwright-tests/playwright-tests/tests/app.spec.ts:7:22",
                    "location": {
                      "file": "/home/runner/work/playwright-tests/playwright-tests/tests/app.spec.ts",
                      "column": 22,
                      "line": 7
                    },
                    "snippet": "\u001b[0m \u001b[90m  5 |\u001b[39m\n \u001b[90m  6 |\u001b[39m   \u001b[90m// Expect a title \"to contain\" a substring.\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m  7 |\u001b[39m   \u001b[36mawait\u001b[39m expect(page)\u001b[33m.\u001b[39mtoHaveTitle(\u001b[35m/Vite + React Hello/\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m  8 |\u001b[39m })\u001b[33m;\u001b[39m\n \u001b[90m  9 |\u001b[39m\n \u001b[90m 10 |\u001b[39m test(\u001b[32m'should fails'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({ page }) \u001b[33m=>\u001b[39m {\u001b[0m"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/home/runner/work/playwright-tests/playwright-tests/tests/app.spec.ts",
                        "column": 22,
                        "line": 7
                      },
                      "message": "Error: \u001b[31mTimed out 5000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoHaveTitle\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nLocator: locator(':root')\nExpected pattern: \u001b[32m/Vite + React Hello/\u001b[39m\nReceived string:  \u001b[31m\"404: NOT_FOUND\"\u001b[39m\nCall log:\n\u001b[2m  - expect.toHaveTitle with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for locator(':root')\u001b[22m\n\u001b[2m    9 × locator resolved to <html lang=\"en\">…</html>\u001b[22m\n\u001b[2m      - unexpected value \"404: NOT_FOUND\"\u001b[22m\n\n\n   5 |\n   6 |   // Expect a title \"to contain\" a substring.\n>  7 |   await expect(page).toHaveTitle(/Vite + React Hello/);\n     |                      ^\n   8 | });\n   9 |\n  10 | test('should fails', async ({ page }) => {\n    at /home/runner/work/playwright-tests/playwright-tests/tests/app.spec.ts:7:22"
                    }
                  ],
                  "stdout": [],
                  "stderr": [],
                  "retry": 2,
                  "startTime": "2025-05-08T09:21:24.730Z",
                  "annotations": [],
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/runner/work/playwright-tests/playwright-tests/test-results/app-has-title-chromium-retry2/test-failed-1.png"
                    },
                    {
                      "name": "_error-context-0",
                      "contentType": "text/markdown",
                      "path": "/home/runner/work/playwright-tests/playwright-tests/test-results/app-has-title-chromium-retry2/error-context.md"
                    },
                    {
                      "name": "trace",
                      "contentType": "application/zip",
                      "path": "/home/runner/work/playwright-tests/playwright-tests/test-results/app-has-title-chromium-retry2/trace.zip"
                    }
                  ],
                  "errorLocation": {
                    "file": "/home/runner/work/playwright-tests/playwright-tests/tests/app.spec.ts",
                    "column": 22,
                    "line": 7
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "c31ff144dc4fee3acd0a-e5a9e2d74bff75c9508e",
          "file": "app.spec.ts",
          "line": 3,
          "column": 1
        },
        {
          "title": "should fails",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 3,
                  "parallelIndex": 0,
                  "status": "failed",
                  "duration": 5244,
                  "error": {
                    "message": "Error: \u001b[31mTimed out 5000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoHaveTitle\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nLocator: locator(':root')\nExpected pattern: \u001b[32m/ok/\u001b[39m\nReceived string:  \u001b[31m\"404: NOT_FOUND\"\u001b[39m\nCall log:\n\u001b[2m  - expect.toHaveTitle with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for locator(':root')\u001b[22m\n\u001b[2m    9 × locator resolved to <html lang=\"en\">…</html>\u001b[22m\n\u001b[2m      - unexpected value \"404: NOT_FOUND\"\u001b[22m\n",
                    "stack": "Error: \u001b[31mTimed out 5000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoHaveTitle\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nLocator: locator(':root')\nExpected pattern: \u001b[32m/ok/\u001b[39m\nReceived string:  \u001b[31m\"404: NOT_FOUND\"\u001b[39m\nCall log:\n\u001b[2m  - expect.toHaveTitle with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for locator(':root')\u001b[22m\n\u001b[2m    9 × locator resolved to <html lang=\"en\">…</html>\u001b[22m\n\u001b[2m      - unexpected value \"404: NOT_FOUND\"\u001b[22m\n\n    at /home/runner/work/playwright-tests/playwright-tests/tests/app.spec.ts:14:22",
                    "location": {
                      "file": "/home/runner/work/playwright-tests/playwright-tests/tests/app.spec.ts",
                      "column": 22,
                      "line": 14
                    },
                    "snippet": "\u001b[0m \u001b[90m 12 |\u001b[39m\n \u001b[90m 13 |\u001b[39m   \u001b[90m// Expect a title \"to contain\" a substring.\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 14 |\u001b[39m   \u001b[36mawait\u001b[39m expect(page)\u001b[33m.\u001b[39mtoHaveTitle(\u001b[35m/ok/\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 15 |\u001b[39m })\u001b[33m;\u001b[39m\n \u001b[90m 16 |\u001b[39m\u001b[0m"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/home/runner/work/playwright-tests/playwright-tests/tests/app.spec.ts",
                        "column": 22,
                        "line": 14
                      },
                      "message": "Error: \u001b[31mTimed out 5000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoHaveTitle\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nLocator: locator(':root')\nExpected pattern: \u001b[32m/ok/\u001b[39m\nReceived string:  \u001b[31m\"404: NOT_FOUND\"\u001b[39m\nCall log:\n\u001b[2m  - expect.toHaveTitle with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for locator(':root')\u001b[22m\n\u001b[2m    9 × locator resolved to <html lang=\"en\">…</html>\u001b[22m\n\u001b[2m      - unexpected value \"404: NOT_FOUND\"\u001b[22m\n\n\n  12 |\n  13 |   // Expect a title \"to contain\" a substring.\n> 14 |   await expect(page).toHaveTitle(/ok/);\n     |                      ^\n  15 | });\n  16 |\n    at /home/runner/work/playwright-tests/playwright-tests/tests/app.spec.ts:14:22"
                    }
                  ],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-05-08T09:21:30.785Z",
                  "annotations": [],
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/runner/work/playwright-tests/playwright-tests/test-results/app-should-fails-chromium/test-failed-1.png"
                    },
                    {
                      "name": "_error-context-0",
                      "contentType": "text/markdown",
                      "path": "/home/runner/work/playwright-tests/playwright-tests/test-results/app-should-fails-chromium/error-context.md"
                    },
                    {
                      "name": "trace",
                      "contentType": "application/zip",
                      "path": "/home/runner/work/playwright-tests/playwright-tests/test-results/app-should-fails-chromium/trace.zip"
                    }
                  ],
                  "errorLocation": {
                    "file": "/home/runner/work/playwright-tests/playwright-tests/tests/app.spec.ts",
                    "column": 22,
                    "line": 14
                  }
                },
                {
                  "workerIndex": 4,
                  "parallelIndex": 0,
                  "status": "failed",
                  "duration": 5233,
                  "error": {
                    "message": "Error: \u001b[31mTimed out 5000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoHaveTitle\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nLocator: locator(':root')\nExpected pattern: \u001b[32m/ok/\u001b[39m\nReceived string:  \u001b[31m\"404: NOT_FOUND\"\u001b[39m\nCall log:\n\u001b[2m  - expect.toHaveTitle with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for locator(':root')\u001b[22m\n\u001b[2m    9 × locator resolved to <html lang=\"en\">…</html>\u001b[22m\n\u001b[2m      - unexpected value \"404: NOT_FOUND\"\u001b[22m\n",
                    "stack": "Error: \u001b[31mTimed out 5000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoHaveTitle\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nLocator: locator(':root')\nExpected pattern: \u001b[32m/ok/\u001b[39m\nReceived string:  \u001b[31m\"404: NOT_FOUND\"\u001b[39m\nCall log:\n\u001b[2m  - expect.toHaveTitle with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for locator(':root')\u001b[22m\n\u001b[2m    9 × locator resolved to <html lang=\"en\">…</html>\u001b[22m\n\u001b[2m      - unexpected value \"404: NOT_FOUND\"\u001b[22m\n\n    at /home/runner/work/playwright-tests/playwright-tests/tests/app.spec.ts:14:22",
                    "location": {
                      "file": "/home/runner/work/playwright-tests/playwright-tests/tests/app.spec.ts",
                      "column": 22,
                      "line": 14
                    },
                    "snippet": "\u001b[0m \u001b[90m 12 |\u001b[39m\n \u001b[90m 13 |\u001b[39m   \u001b[90m// Expect a title \"to contain\" a substring.\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 14 |\u001b[39m   \u001b[36mawait\u001b[39m expect(page)\u001b[33m.\u001b[39mtoHaveTitle(\u001b[35m/ok/\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 15 |\u001b[39m })\u001b[33m;\u001b[39m\n \u001b[90m 16 |\u001b[39m\u001b[0m"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/home/runner/work/playwright-tests/playwright-tests/tests/app.spec.ts",
                        "column": 22,
                        "line": 14
                      },
                      "message": "Error: \u001b[31mTimed out 5000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoHaveTitle\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nLocator: locator(':root')\nExpected pattern: \u001b[32m/ok/\u001b[39m\nReceived string:  \u001b[31m\"404: NOT_FOUND\"\u001b[39m\nCall log:\n\u001b[2m  - expect.toHaveTitle with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for locator(':root')\u001b[22m\n\u001b[2m    9 × locator resolved to <html lang=\"en\">…</html>\u001b[22m\n\u001b[2m      - unexpected value \"404: NOT_FOUND\"\u001b[22m\n\n\n  12 |\n  13 |   // Expect a title \"to contain\" a substring.\n> 14 |   await expect(page).toHaveTitle(/ok/);\n     |                      ^\n  15 | });\n  16 |\n    at /home/runner/work/playwright-tests/playwright-tests/tests/app.spec.ts:14:22"
                    }
                  ],
                  "stdout": [],
                  "stderr": [],
                  "retry": 1,
                  "startTime": "2025-05-08T09:21:36.841Z",
                  "annotations": [],
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/runner/work/playwright-tests/playwright-tests/test-results/app-should-fails-chromium-retry1/test-failed-1.png"
                    },
                    {
                      "name": "_error-context-0",
                      "contentType": "text/markdown",
                      "path": "/home/runner/work/playwright-tests/playwright-tests/test-results/app-should-fails-chromium-retry1/error-context.md"
                    },
                    {
                      "name": "trace",
                      "contentType": "application/zip",
                      "path": "/home/runner/work/playwright-tests/playwright-tests/test-results/app-should-fails-chromium-retry1/trace.zip"
                    }
                  ],
                  "errorLocation": {
                    "file": "/home/runner/work/playwright-tests/playwright-tests/tests/app.spec.ts",
                    "column": 22,
                    "line": 14
                  }
                },
                {
                  "workerIndex": 5,
                  "parallelIndex": 0,
                  "status": "failed",
                  "duration": 5940,
                  "error": {
                    "message": "Error: \u001b[31mTimed out 5000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoHaveTitle\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nLocator: locator(':root')\nExpected pattern: \u001b[32m/ok/\u001b[39m\nReceived string:  \u001b[31m\"404: NOT_FOUND\"\u001b[39m\nCall log:\n\u001b[2m  - expect.toHaveTitle with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for locator(':root')\u001b[22m\n\u001b[2m    9 × locator resolved to <html lang=\"en\">…</html>\u001b[22m\n\u001b[2m      - unexpected value \"404: NOT_FOUND\"\u001b[22m\n",
                    "stack": "Error: \u001b[31mTimed out 5000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoHaveTitle\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nLocator: locator(':root')\nExpected pattern: \u001b[32m/ok/\u001b[39m\nReceived string:  \u001b[31m\"404: NOT_FOUND\"\u001b[39m\nCall log:\n\u001b[2m  - expect.toHaveTitle with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for locator(':root')\u001b[22m\n\u001b[2m    9 × locator resolved to <html lang=\"en\">…</html>\u001b[22m\n\u001b[2m      - unexpected value \"404: NOT_FOUND\"\u001b[22m\n\n    at /home/runner/work/playwright-tests/playwright-tests/tests/app.spec.ts:14:22",
                    "location": {
                      "file": "/home/runner/work/playwright-tests/playwright-tests/tests/app.spec.ts",
                      "column": 22,
                      "line": 14
                    },
                    "snippet": "\u001b[0m \u001b[90m 12 |\u001b[39m\n \u001b[90m 13 |\u001b[39m   \u001b[90m// Expect a title \"to contain\" a substring.\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 14 |\u001b[39m   \u001b[36mawait\u001b[39m expect(page)\u001b[33m.\u001b[39mtoHaveTitle(\u001b[35m/ok/\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 15 |\u001b[39m })\u001b[33m;\u001b[39m\n \u001b[90m 16 |\u001b[39m\u001b[0m"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/home/runner/work/playwright-tests/playwright-tests/tests/app.spec.ts",
                        "column": 22,
                        "line": 14
                      },
                      "message": "Error: \u001b[31mTimed out 5000ms waiting for \u001b[39m\u001b[2mexpect(\u001b[22m\u001b[31mlocator\u001b[39m\u001b[2m).\u001b[22mtoHaveTitle\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nLocator: locator(':root')\nExpected pattern: \u001b[32m/ok/\u001b[39m\nReceived string:  \u001b[31m\"404: NOT_FOUND\"\u001b[39m\nCall log:\n\u001b[2m  - expect.toHaveTitle with timeout 5000ms\u001b[22m\n\u001b[2m  - waiting for locator(':root')\u001b[22m\n\u001b[2m    9 × locator resolved to <html lang=\"en\">…</html>\u001b[22m\n\u001b[2m      - unexpected value \"404: NOT_FOUND\"\u001b[22m\n\n\n  12 |\n  13 |   // Expect a title \"to contain\" a substring.\n> 14 |   await expect(page).toHaveTitle(/ok/);\n     |                      ^\n  15 | });\n  16 |\n    at /home/runner/work/playwright-tests/playwright-tests/tests/app.spec.ts:14:22"
                    }
                  ],
                  "stdout": [],
                  "stderr": [],
                  "retry": 2,
                  "startTime": "2025-05-08T09:21:42.917Z",
                  "annotations": [],
                  "attachments": [
                    {
                      "name": "screenshot",
                      "contentType": "image/png",
                      "path": "/home/runner/work/playwright-tests/playwright-tests/test-results/app-should-fails-chromium-retry2/test-failed-1.png"
                    },
                    {
                      "name": "_error-context-0",
                      "contentType": "text/markdown",
                      "path": "/home/runner/work/playwright-tests/playwright-tests/test-results/app-should-fails-chromium-retry2/error-context.md"
                    },
                    {
                      "name": "trace",
                      "contentType": "application/zip",
                      "path": "/home/runner/work/playwright-tests/playwright-tests/test-results/app-should-fails-chromium-retry2/trace.zip"
                    }
                  ],
                  "errorLocation": {
                    "file": "/home/runner/work/playwright-tests/playwright-tests/tests/app.spec.ts",
                    "column": 22,
                    "line": 14
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "c31ff144dc4fee3acd0a-4c49b825d2e34d900c37",
          "file": "app.spec.ts",
          "line": 10,
          "column": 1
        }
      ]
    },
    {
      "title": "example.spec.ts",
      "file": "example.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [
        {
          "title": "has title",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 6,
                  "parallelIndex": 0,
                  "status": "passed",
                  "duration": 547,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-05-08T09:21:49.675Z",
                  "annotations": [],
                  "attachments": [
                    {
                      "name": "trace",
                      "contentType": "application/zip",
                      "path": "/home/runner/work/playwright-tests/playwright-tests/test-results/example-has-title-chromium/trace.zip"
                    }
                  ]
                }
              ],
              "status": "expected"
            }
          ],
          "id": "a30a6eba6312f6b87ea5-b06063a3e613764d08f8",
          "file": "example.spec.ts",
          "line": 3,
          "column": 1
        },
        {
          "title": "get started link",
          "ok": true,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 6,
                  "parallelIndex": 0,
                  "status": "passed",
                  "duration": 685,
                  "errors": [],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-05-08T09:21:50.381Z",
                  "annotations": [],
                  "attachments": [
                    {
                      "name": "trace",
                      "contentType": "application/zip",
                      "path": "/home/runner/work/playwright-tests/playwright-tests/test-results/example-get-started-link-chromium/trace.zip"
                    }
                  ]
                }
              ],
              "status": "expected"
            }
          ],
          "id": "a30a6eba6312f6b87ea5-274e97907a6e3638a22f",
          "file": "example.spec.ts",
          "line": 10,
          "column": 1
        },
        {
          "title": "Should fail",
          "ok": false,
          "tags": [],
          "tests": [
            {
              "timeout": 30000,
              "annotations": [],
              "expectedStatus": "passed",
              "projectId": "chromium",
              "projectName": "chromium",
              "results": [
                {
                  "workerIndex": 6,
                  "parallelIndex": 0,
                  "status": "failed",
                  "duration": 3,
                  "error": {
                    "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mfalse\u001b[39m\nReceived: \u001b[31mtrue\u001b[39m",
                    "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mfalse\u001b[39m\nReceived: \u001b[31mtrue\u001b[39m\n    at /home/runner/work/playwright-tests/playwright-tests/tests/example.spec.ts:21:16",
                    "location": {
                      "file": "/home/runner/work/playwright-tests/playwright-tests/tests/example.spec.ts",
                      "column": 16,
                      "line": 21
                    },
                    "snippet": "\u001b[0m \u001b[90m 19 |\u001b[39m\n \u001b[90m 20 |\u001b[39m test(\u001b[32m'Should fail'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({}) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 21 |\u001b[39m   expect(\u001b[36mtrue\u001b[39m)\u001b[33m.\u001b[39mtoBe(\u001b[36mfalse\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 22 |\u001b[39m })\n \u001b[90m 23 |\u001b[39m\u001b[0m"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/home/runner/work/playwright-tests/playwright-tests/tests/example.spec.ts",
                        "column": 16,
                        "line": 21
                      },
                      "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mfalse\u001b[39m\nReceived: \u001b[31mtrue\u001b[39m\n\n  19 |\n  20 | test('Should fail', async ({}) => {\n> 21 |   expect(true).toBe(false);\n     |                ^\n  22 | })\n  23 |\n    at /home/runner/work/playwright-tests/playwright-tests/tests/example.spec.ts:21:16"
                    }
                  ],
                  "stdout": [],
                  "stderr": [],
                  "retry": 0,
                  "startTime": "2025-05-08T09:21:51.142Z",
                  "annotations": [],
                  "attachments": [
                    {
                      "name": "_error-context-0",
                      "contentType": "text/markdown",
                      "path": "/home/runner/work/playwright-tests/playwright-tests/test-results/example-Should-fail-chromium/error-context.md"
                    },
                    {
                      "name": "trace",
                      "contentType": "application/zip",
                      "path": "/home/runner/work/playwright-tests/playwright-tests/test-results/example-Should-fail-chromium/trace.zip"
                    }
                  ],
                  "errorLocation": {
                    "file": "/home/runner/work/playwright-tests/playwright-tests/tests/example.spec.ts",
                    "column": 16,
                    "line": 21
                  }
                },
                {
                  "workerIndex": 7,
                  "parallelIndex": 0,
                  "status": "failed",
                  "duration": 9,
                  "error": {
                    "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mfalse\u001b[39m\nReceived: \u001b[31mtrue\u001b[39m",
                    "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mfalse\u001b[39m\nReceived: \u001b[31mtrue\u001b[39m\n    at /home/runner/work/playwright-tests/playwright-tests/tests/example.spec.ts:21:16",
                    "location": {
                      "file": "/home/runner/work/playwright-tests/playwright-tests/tests/example.spec.ts",
                      "column": 16,
                      "line": 21
                    },
                    "snippet": "\u001b[0m \u001b[90m 19 |\u001b[39m\n \u001b[90m 20 |\u001b[39m test(\u001b[32m'Should fail'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({}) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 21 |\u001b[39m   expect(\u001b[36mtrue\u001b[39m)\u001b[33m.\u001b[39mtoBe(\u001b[36mfalse\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 22 |\u001b[39m })\n \u001b[90m 23 |\u001b[39m\u001b[0m"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/home/runner/work/playwright-tests/playwright-tests/tests/example.spec.ts",
                        "column": 16,
                        "line": 21
                      },
                      "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mfalse\u001b[39m\nReceived: \u001b[31mtrue\u001b[39m\n\n  19 |\n  20 | test('Should fail', async ({}) => {\n> 21 |   expect(true).toBe(false);\n     |                ^\n  22 | })\n  23 |\n    at /home/runner/work/playwright-tests/playwright-tests/tests/example.spec.ts:21:16"
                    }
                  ],
                  "stdout": [],
                  "stderr": [],
                  "retry": 1,
                  "startTime": "2025-05-08T09:21:51.856Z",
                  "annotations": [],
                  "attachments": [
                    {
                      "name": "_error-context-0",
                      "contentType": "text/markdown",
                      "path": "/home/runner/work/playwright-tests/playwright-tests/test-results/example-Should-fail-chromium-retry1/error-context.md"
                    },
                    {
                      "name": "trace",
                      "contentType": "application/zip",
                      "path": "/home/runner/work/playwright-tests/playwright-tests/test-results/example-Should-fail-chromium-retry1/trace.zip"
                    }
                  ],
                  "errorLocation": {
                    "file": "/home/runner/work/playwright-tests/playwright-tests/tests/example.spec.ts",
                    "column": 16,
                    "line": 21
                  }
                },
                {
                  "workerIndex": 8,
                  "parallelIndex": 0,
                  "status": "failed",
                  "duration": 9,
                  "error": {
                    "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mfalse\u001b[39m\nReceived: \u001b[31mtrue\u001b[39m",
                    "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mfalse\u001b[39m\nReceived: \u001b[31mtrue\u001b[39m\n    at /home/runner/work/playwright-tests/playwright-tests/tests/example.spec.ts:21:16",
                    "location": {
                      "file": "/home/runner/work/playwright-tests/playwright-tests/tests/example.spec.ts",
                      "column": 16,
                      "line": 21
                    },
                    "snippet": "\u001b[0m \u001b[90m 19 |\u001b[39m\n \u001b[90m 20 |\u001b[39m test(\u001b[32m'Should fail'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m ({}) \u001b[33m=>\u001b[39m {\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 21 |\u001b[39m   expect(\u001b[36mtrue\u001b[39m)\u001b[33m.\u001b[39mtoBe(\u001b[36mfalse\u001b[39m)\u001b[33m;\u001b[39m\n \u001b[90m    |\u001b[39m                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 22 |\u001b[39m })\n \u001b[90m 23 |\u001b[39m\u001b[0m"
                  },
                  "errors": [
                    {
                      "location": {
                        "file": "/home/runner/work/playwright-tests/playwright-tests/tests/example.spec.ts",
                        "column": 16,
                        "line": 21
                      },
                      "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mfalse\u001b[39m\nReceived: \u001b[31mtrue\u001b[39m\n\n  19 |\n  20 | test('Should fail', async ({}) => {\n> 21 |   expect(true).toBe(false);\n     |                ^\n  22 | })\n  23 |\n    at /home/runner/work/playwright-tests/playwright-tests/tests/example.spec.ts:21:16"
                    }
                  ],
                  "stdout": [],
                  "stderr": [],
                  "retry": 2,
                  "startTime": "2025-05-08T09:21:52.587Z",
                  "annotations": [],
                  "attachments": [
                    {
                      "name": "_error-context-0",
                      "contentType": "text/markdown",
                      "path": "/home/runner/work/playwright-tests/playwright-tests/test-results/example-Should-fail-chromium-retry2/error-context.md"
                    },
                    {
                      "name": "trace",
                      "contentType": "application/zip",
                      "path": "/home/runner/work/playwright-tests/playwright-tests/test-results/example-Should-fail-chromium-retry2/trace.zip"
                    }
                  ],
                  "errorLocation": {
                    "file": "/home/runner/work/playwright-tests/playwright-tests/tests/example.spec.ts",
                    "column": 16,
                    "line": 21
                  }
                }
              ],
              "status": "unexpected"
            }
          ],
          "id": "a30a6eba6312f6b87ea5-3ea5ca4fa83ba72684b3",
          "file": "example.spec.ts",
          "line": 20,
          "column": 1
        }
      ]
    }
  ],
  "errors": [],
  "stats": {
    "startTime": "2025-05-08T09:21:07.682Z",
    "duration": 44946.228,
    "expected": 2,
    "skipped": 0,
    "unexpected": 3,
    "flaky": 0
  }
}